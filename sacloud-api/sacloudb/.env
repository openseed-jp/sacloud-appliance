
. ../conf/env.cache

SACLOUD_SERVER_MEMORY_MB=$(jq .ServerPlan.MemoryMB $SACLOUDAPI_HOME/server.json)


SACLOUDB_DATABASE_NAME=$(jq -r  .Appliance.Remark.DBConf.Common.DatabaseName $SACLOUDAPI_HOME/status.json)
if [ "$SACLOUDB_DATABASE_NAME" = "MariaDB" ]; then
    SACLOUDB_DATABASE_OWNER=mysql
fi
if [ "$SACLOUDB_DATABASE_NAME" = "postgres" ]; then
    SACLOUDB_DATABASE_OWNER=postgres
fi

SACLOUDB_MODULE_BASE=$SACLOUDAPI_HOME/$SACLOUD_MODULE_NAME

. $SACLOUDAPI_HOME/bin/functions.inc.sh

SACLOUDB_DEFAULT_USER=$(jq -r .Appliance.Settings.DBConf.Common.DefaultUser  $SACLOUDAPI_HOME/status.json)
SACLOUDB_DEFAULT_PASS=$(jq -r .Appliance.Settings.DBConf.Common.UserPassword $SACLOUDAPI_HOME/status.json)


SACLOUDB_ADMIN_USER=${SACLOUD_ADMIN_USER}
SACLOUDB_ADMIN_PASS=${SACLOUD_ADMIN_PASS}

SACLOUDB_REPLICA_USER=${SACLOUD_ADMIN_USER}
SACLOUDB_REPLICA_PASS=${SACLOUD_ADMIN_PASS}

DB_REPLICATION_NETROWK_JSON=$(jq -r .Appliance.Servers[0].Interfaces[1].Switch.UserSubnet $SACLOUDAPI_HOME/status.json)
DB_REPLICATION_NETROWK_ADDRESS=$(echo $DB_REPLICATION_NETROWK_JSON | jq -r .NetworkAddress)
DB_REPLICATION_NETROWK_MASKLEN=$(echo $DB_REPLICATION_NETROWK_JSON | jq -r .NetworkMaskLen)
DB_REPLICATION_NETROWK_MASK=$(ipcalc -m $DB_REPLICATION_NETROWK_ADDRESS/$DB_REPLICATION_NETROWK_MASKLEN | cut -d= -f2)
DB_REPLICATION_NETROWK=${DB_REPLICATION_NETROWK_ADDRESS}/${DB_REPLICATION_NETROWK_MASK}


DB_BACKUP_JSON=$(jq -r .Appliance.Settings.DBConf.Backup $SACLOUDAPI_HOME/status.json)
DB_BACKUP_ROTATE=$(echo $DB_BACKUP_JSON | jq -r .Rotate   //8)
DB_BACKUP_TIME=$(echo $DB_BACKUP_JSON | jq -r .Time       //"")
DB_BACKUP_DAY=$(echo $DB_BACKUP_JSON | jq -r .DayOfWeek   //"")
DB_BACKUP_CONNECT=$(echo $DB_BACKUP_JSON | jq -r .Connect //"")
DB_BACKUP_CACHE_FILE=/tmp/.backup_files.cache.json

DB_BACKUP_CONNECT_PROTOCOL=$(echo $DB_BACKUP_CONNECT | cut -d':' -f 1)
DB_BACKUP_CONNECT_SRCPATH=/$(echo $DB_BACKUP_CONNECT | cut -d'/' -f 4-)
DB_BACKUP_CONNECT_USERPASSHOSTPORT=$(echo $DB_BACKUP_CONNECT | cut -d'/' -f 3)
if echo $DB_BACKUP_CONNECT_USERPASSHOSTPORT | grep "@" > /dev/null ; then
    DB_BACKUP_CONNECT_USERPASSHOSTPORT=${DB_BACKUP_CONNECT_USERPASSHOSTPORT}:
else
    DB_BACKUP_CONNECT_USERPASSHOSTPORT=:@${DB_BACKUP_CONNECT_USERPASSHOSTPORT}:
fi
DB_BACKUP_CONNECT_USER=$(echo ${DB_BACKUP_CONNECT_USERPASSHOSTPORT//@/:} | cut -d: -f1)
DB_BACKUP_CONNECT_PASS=$(echo ${DB_BACKUP_CONNECT_USERPASSHOSTPORT//@/:} | cut -d: -f2)
DB_BACKUP_CONNECT_HOST=$(echo ${DB_BACKUP_CONNECT_USERPASSHOSTPORT//@/:} | cut -d: -f3)
DB_BACKUP_CONNECT_PORT=$(echo ${DB_BACKUP_CONNECT_USERPASSHOSTPORT//@/:} | cut -d: -f4)
