#!/bin/bash

SACLOUDB_MODULE_BASE=$(cd $(dirname ${BASH_SOURCE:-$0}); pwd)
cd $SACLOUDB_MODULE_BASE/..
. .env

export PGVERSION=13
export PGHOME=/usr/pgsql-$PGVERSION
export PGDATA=/var/lib/pgsql/$PGVERSION/data
export PGPORT=5432



function pg_ctl() {
    su - postgres -c "$PGHOME/bin/pg_ctl $@"
    return $?
}

function wait_for_db_connect() {
    HOST_ADDRESS=${1:localhost}
    SLEEP_INTERVAL=${2:-1}
    LOGINUSER=${3:-$SACLOUDB_ADMIN_USER}
    su - postgres <<_EOL > /dev/null 2>&1
    for r in {1..10}; do
        if echo "\q" | psql -h $HOST_ADDRESS -U $LOGINUSER postgres ; then
            exit 0
            break;
        else
            sleep $SLEEP_INTERVAL
        fi
    done
    exit 1
_EOL
    return $?
}

function wait_for_db_shutdown() {
    su - postgres <<_EOL
        if $PGHOME/bin/pg_ctl status -D $PGDATA ; then
            $PGHOME/bin/pg_ctl stop -D $PGDATA;
        fi
        exit 0
_EOL
    while
        ps -ef | grep "$PGHOME/bin/postgre[s]" >/dev/null 
    do
        sleep 1;
    done
    return $?
}

function sacloudb_is_writeable() {
    return 0
}

function sacloudb_update_user () {
    USER_ACCOUNT="$1"
    USER_HOST="$2"
    USER_PASSWD="$3"
    USER_DATABASE="\`$4\`"
    USER_PASSWD_DECODE=$(echo "$USER_PASSWD" | sed 's/\(['"'"'\\]\)/\\\1/g')


    su - postgres <<_EOF 
    psql postgres -t -A \
        -o /etc/pgpool-II/pool_passwd \
        -c "select concat(usename, ':', passwd) from pg_shadow where passwd is not null;"
_EOF
    chown -R postgres:postgres /etc/pgpool-II

    return 0
}

function sacloudb_update_pgadmin_user() {
        PGADMIN_COOKIEJAR=/tmp/pgadmin.cookie
        PGADMIN_ADMINUSER=$SACLOUDB_ADMIN_USER
        PGADMIN_ADMINPASS=$SACLOUDB_ADMIN_PASS
        PGADMIN_NEWUSER=$1@localhost
        PGADMIN_NEWPASS=$2

        CSRF_TOKEN=$(curl -sS -c $PGADMIN_COOKIEJAR http://localhost/pgadmin4/login | grep csrf_token | cut -d'"' -f8)


        cat <<_EOL | curl -sS -b $PGADMIN_COOKIEJAR -X POST -d @- \
        -o /dev/null \
        -H "application/x-www-form-urlencoded" http://localhost/pgadmin4/authenticate/login
next=%2Fpgadmin4%2Fbrowser%2F&csrf_token=$CSRF_TOKEN&email=$PGADMIN_ADMINUSER&password=$PGADMIN_ADMINPASS&language=ja
_EOL

        cat <<_EOL | curl -sS -b $PGADMIN_COOKIEJAR -X POST -d @- \
        -H "Content-Type: application/json" \
        -H "X-Requested-With: XMLHttpRequest" \
        -H "X-pgA-CSRFToken: $CSRF_TOKEN" \
        http://localhost/pgadmin4/user_management/user/
{
        "username": "aaaa",
        "email":"$PGADMIN_NEWUSER",
        "active":true,
        "role":"2",
        "newPassword":"$PGADMIN_NEWPASS",
        "confirmPassword":"$PGADMIN_NEWPASS",
        "auth_source":"internal",
        "authOnlyInternal":true
}
_EOL

        curl -sS -b $PGADMIN_COOKIEJAR -o /dev/null http://localhost/pgadmin4/logout?next=/pgadmin4/browser/
        rm -f $PGADMIN_COOKIEJAR

        python3 /usr/pgadmin4/web/setup.py \
            --user $PGADMIN_NEWUSER \
            --load-servers /var/lib/pgadmin/servers.json         
}

