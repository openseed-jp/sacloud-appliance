#!/bin/bash


SACLOUDB_MODULE_BASE=$(cd $(dirname ${BASH_SOURCE:-$0}); pwd)
cd $SACLOUDB_MODULE_BASE/..
. .env


SACLOUDB_MAXSCALE_USER=${SACLOUD_ADMIN_USER}
SACLOUDB_MAXSCALE_PASS=${SACLOUD_ADMIN_PASS}

SACLOUDB_INNODB_BUFFER_POOL_SIZE=$(expr "(" $SACLOUD_SERVER_MEMORY_MB - 512 ")" "*" 75 / 100)M


function wait_for_db_connect() {
    HOST_ADDRESS=${1:localhost}
    SLEEP_INTERVAL=${2:-1}
    LOGINUSER=${3:-$SACLOUDB_ADMIN_USER}
    LOGINPASS=${4:-$SACLOUDB_ADMIN_PASS}

    for r in {1..10}; do
        if echo "\q;" | mysql -h ${HOST_ADDRESS} -u ${LOGINUSER} -p"${LOGINPASS}" 2>/dev/null  ; then
            return 0
        else
            sleep $SLEEP_INTERVAL
        fi
    done
    return $?
}

function wait_for_db_shutdown() {
    # mysql -u root -e"SHUTDOWN WAIT FOR ALL SLAVES"
    until ! ps -ef | grep /usr/sbin/mariad[b] >/dev/null ; do
        mysqladmin --wait-for-all-slaves shutdown || true
        echo .;
        sleep 1;
    done
}


# 認証情報の追加
function maxctrl () {
    if [ ! -f /var/lib/maxscale/passwd ]; then
        # ファイルがない
        timeout 5s /usr/bin/maxctrl $@
    elif jq -c '.[] | select (.name == "admin")' /var/lib/maxscale/passwd | grep admin ; then
        # アカウント変更前
        timeout 5s /usr/bin/maxctrl $@
    else
        timeout 5s /usr/bin/maxctrl -u $SACLOUD_ADMIN_USER -p $SACLOUD_ADMIN_PASS $@
    fi
    return $?
}

function sacloudb_is_writeable() {
    READONLY=$(mysql -N -e"show global variables like 'read_only'" 2>/dev/null | cut -f2)
    # 成功：0, 失敗:1
    if [ ! $? = 0 ]; then
        return 1
    fi
    return $([ "$READONLY" = "OFF" ] && echo 0 || echo 1)
}

function sacloudb_update_user () {
    USER_ACCOUNT="$1"
    USER_HOST="$2"
    USER_PASSWD="$3"
    USER_DATABASE="\`$4\`"
    USER_PASSWD_DECODE=$(echo "$USER_PASSWD" | sed 's/\(['"'"'\\]\)/\\\1/g')

    if [ "$USER_ACCOUNT" = "" ]; then 
        return 1;
    fi

    if cat /etc/httpd/.htpasswd-secure | cut -d: -f1 | grep "^$USER_ACCOUNT$" >/dev/null ; then
        return 1;
    fi

    if ! echo "$USER_ACCOUNT" | grep -E '[a-zA-Z][a-zA-Z0-9_]{2,19}' >/dev/null ; then
        return 1;
    fi
    if ! echo "$USER_PASSWD" | grep -E '[a-zA-Z0-9\&\(\)*+,-./;<=>?\@^_{|}~]{4,32}' >/dev/null ; then
        return 1;
    fi

    if sacloudb_is_writeable ; then
        : update database user / password
        echo $(cat <<_EOL
FLUSH PRIVILEGES;
set global strict_password_validation = 'OFF';        
$([ "$1" = "" ] && echo '-- ')CREATE USER IF NOT EXISTS '$USER_ACCOUNT'@'$USER_HOST' IDENTIFIED BY '$USER_PASSWD_DECODE';
$([ "$3" = "" ] && echo '-- ')ALTER USER '$USER_ACCOUNT'@'$USER_HOST' IDENTIFIED BY '$USER_PASSWD_DECODE';
$([ "$4" = "" ] && echo '-- ')CREATE DATABASE IF NOT EXISTS $USER_DATABASE;
$([ "$4" = "" ] && echo '-- ')GRANT ALL PRIVILEGES ON $USER_DATABASE.* TO '$USER_ACCOUNT'@'$USER_HOST' WITH GRANT OPTION;

$([ "$1" = "" ] && echo '-- ')GRANT SELECT,INSERT,UPDATE,DELETE,CREATE,DROP,RELOAD,PROCESS,REFERENCES,INDEX,ALTER,
$([ "$1" = "" ] && echo '-- ')      SHOW DATABASES, CREATE TEMPORARY TABLES,LOCK TABLES,EXECUTE,REPLICATION CLIENT,
$([ "$1" = "" ] && echo '-- ')      CREATE VIEW,SHOW VIEW,CREATE ROUTINE, ALTER ROUTINE,CREATE USER,EVENT,TRIGGER,
$([ "$1" = "" ] && echo '-- ')      REPLICATION SLAVE,DELETE HISTORY,CONNECTION ADMIN
$([ "$1" = "" ] && echo '-- ')      ON *.* TO '$USER_ACCOUNT'@'%' WITH GRANT OPTION;

set global strict_password_validation = 'ON';
FLUSH PRIVILEGES;
_EOL
) | mysql -u root
    fi

    htpasswd -b /etc/httpd/.htpasswd-user "$USER_ACCOUNT" "$USER_PASSWD"
    htpasswd -b /etc/httpd/.htpasswd "$USER_ACCOUNT" "$USER_PASSWD"

    # パスワード変換を許可する？
    : update macscale password
    if [ -f /var/lib/maxscale/passwd ]; then
        if jq -c '.[] | select (.name == "'$USER_ACCOUNT'")' /var/lib/maxscale/passwd | grep "$USER_ACCOUNT" ; then
            maxctrl alter user $USER_ACCOUNT $USER_PASSWD
        fi
    fi
}
